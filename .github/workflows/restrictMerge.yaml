name: Restrict Merge unless Approved

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]
  pull_request_review:
    types: [submitted]

jobs:
  restrict-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Check if PR is approved by non-author
        id: check-approval
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request || context.payload.review.pull_request;
            const { owner, repo } = context.repo;
            const prAuthor = pr.user.login;

            let reviews = [];
            try {
              // Attempt to get reviews
              reviews = await github.pulls.listReviews({
                owner: owner,
                repo: repo,
                pull_number: pr.number,
              });
            } catch (error) {
              // If fetching reviews fails, handle the error
              console.error('Failed to fetch reviews:', error.message);
            }

            // Check if there is at least one approval from a different user than the PR author
            const approvedByOther = reviews.data ? reviews.data.some(review => review.state === 'APPROVED' && review.user.login !== prAuthor) : false;

            // Create a check run with neutral status if not approved by a non-author
            await github.checks.create({
              owner: owner,
              repo: repo,
              name: 'Approval Check',
              head_sha: pr.head.sha,
              status: 'completed',
              conclusion: approvedByOther ? 'success' : 'neutral',
              output: {
                title: 'Approval Check',
                summary: approvedByOther 
                  ? 'PR is approved by a non-author.' 
                  : 'PR is not approved by a non-author.',
              },
            });
